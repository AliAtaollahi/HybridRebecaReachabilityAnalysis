hybrid reachability
{
  state var x1, x2, x3, x4, u, x1_tmp, x2_tmp, x3_tmp, x4_tmp, RN, nRT, nRT_tmp, LT2, GT, Vx0, v, v2, s

  par{
    Tmin = 0.05     Tmax = 0.3       L = 0.046       LLM = -0.092       LM= -0.046  
    error=0.001
    
  }
  setting
  {
    fixed steps 0.001
    time 2
    remainder estimation 1e-5
    QR precondition
    gnuplot octagon GT,nRT
    fixed orders 100
    cutoff 1e-5
    precision 128
    output stc16_1 
    max jumps 5
    print on
  }
 
 modes
 {
    Sys
    {
      nonpoly ode
      {
        x1' = x2
        x2' = -0.01 * x2 + 1.02 * x3 + 0.1 * u
        x3' = x4
        x4'= -0.04 * x2 + 41.3 * x3 + 0.38 * u
        GT'=1
        nRT'=-1
        v2'= x1 * (3.3362 * x2 - 18.9386 * x3 - 3.7186 * x4) + x2 * (1.5426 * x2 - 31.5689 * x3 - 5.7879 * x4) + x3 * ( 88.6675 * x3 + 35.1935 * x4) + x4 * (2.2775 * x4)
        + u * (0.15349 * x1_tmp + 0.19819 * x2_tmp - 0.52833 * x3_tmp - 0.07225 * x4_tmp) + u * (0.86545 * x3_tmp - 0.18867 * x1_tmp - 0.27455 * x2_tmp + 0.15352 * x4_tmp)
        u'=0
        x1_tmp'=0
        x2_tmp'=0
        x3_tmp'=0
        x4_tmp'=0
        RN'=0
        LT2'=0
        s'=0
        Vx0'=0
        v'=0
        nRT_tmp'=0
      }
   
      inv
      {
        nRT>=error
	  }
    }
       
    calcnRT
    {
      nonpoly ode
      {
        x1_tmp' = x2_tmp
        x2_tmp' = -0.01 * x2_tmp + 1.02 * x3_tmp + 0.1 * u
        x3_tmp' = x4_tmp
        x4_tmp'= -0.04 * x2_tmp + 41.3 * x3_tmp + 0.38 * u
        LT2'=1
        nRT'=0
        nRT_tmp'=0
        Vx0'=0
        v'= x1_tmp * (3.3362 * x2_tmp - 18.9386 * x3_tmp - 3.7186 * x4_tmp) + x2_tmp * (1.5426 * x2_tmp - 31.5689 * x3_tmp - 5.7879 * x4_tmp) + x3_tmp * ( 88.6675 * x3_tmp + 35.1935 * x4_tmp) +
         x4_tmp * (2.2775 * x4_tmp) + u * (0.15349 * x1_tmp + 0.19819 * x2_tmp - 0.52833 * x3_tmp - 0.07225 * x4_tmp) + 
         u * (0.86545 * x3_tmp - 0.18867 * x1_tmp - 0.27455 * x2_tmp + 0.15352 * x4_tmp) 
        s'= -LM*Vx0*exp(LM*nRT_tmp)
        x1'=0
        x2'=0
        x3'=0
        x4'=0
        u'=0
        RN'=0
        GT'=0
        v2'=0
      }
   
      inv
      {
      	LT2<=Tmin
        nRT_tmp<=Tmax
      }
    }
 }
  
  jumps
  {
    
    Sys -> calcnRT 
    guard { nRT <= error } 
    reset { RN' := RN + 1 v':= v2 s':= v2 Vx0':=v2 u':= 28.3233*x1 + 33.3717*x2 - 267.5592*x3 - 40.6629*x4 x1_tmp':= x1  x2_tmp':= x2  x3_tmp':= x3  x4_tmp':= x4  LT2':=0 nRT_tmp':=0}    
    parallelotope aggregation {}
  
    calcnRT -> calcnRT 
    guard { LT2 >= Tmin v-s <= 0 } 
    reset { LT2' := 0 }
    parallelotope aggregation {}
  
    calcnRT -> Sys 
    guard { LT2 >= Tmin v-s >= 0 } 
    reset { nRT' := nRT_tmp-Tmin  v2':=v}
    parallelotope aggregation {}

    calcnRT -> Sys 
    guard { nRT_tmp >= Tmax } 
    reset { nRT':= Tmax   v2':=v}
    parallelotope aggregation {}
 
  }
 
  init
  {
    Sys
    {
        x2 in [0,0]
        x1 in [20,20]
        x4 in [0,0]
        x3 in [10,10]
        u in [0,0]
        GT in [0,0]

        x1_tmp in [0.01,0.01]
        x2_tmp in [0.01,0.01]
        x3_tmp in [0.01,0.01]
        x4_tmp in [0.01,0.01]

        RN in [0,0]
        nRT in [0.05,0.05]
        nRT_tmp in [0.0,0.0]
        LT2 in [0,0]
        s in [0.01,0.01]
        Vx0 in [0.01,0.01]
        v2 in [659.46,659.46]
        
    }
  }
}
